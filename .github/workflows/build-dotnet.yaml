name: Build .NET
on:
  workflow_call:
    inputs:
      SDK_VERSION:
        type: string
        required: true
        description: The version of the .NET SDK to use when building.
      SOLUTION_DIR:
        type: string
        required: true
        description: The directory that contains the solution file to build.
      VERSION:
        type: string
        required: true
      IS_DEPLOYABLE:
        type: boolean
        required: true
      CONTAINS_LIBRARIES:
        type: boolean
        required: false
        default: false
env:
  BUILD_CONFIG: Release
jobs:
  dotnet-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.SOLUTION_DIR }}
    steps:
      #region Configure
      - uses: actions/checkout@v2
      - name: Set common environment variables
        run: |
          echo "REPO_URL=$(git remote get-url origin)" >> $GITHUB_ENV
      - name: Set pre-release version
        if: ${{ inputs.IS_DEPLOYABLE }}
        run: echo "VERSION_NUMBER=${{ inputs.VERSION }}.${{ github.run_number }}${{github.run_attempt }}" >> $GITHUB_ENV
      - name: Set version
        if: ${{ !inputs.IS_DEPLOYABLE }}
        run: echo "VERSION_NUMBER=${{ inputs.VERSION }}-rc.${{ github.run_number }}${{ github.run_attempt }}" >> $GITHUB_ENV
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ inputs.SDK_VERSION }}
      #endregion

      #region Build and test
      - name: Run dotnet build
        run: dotnet build --nologo -c "${{ env.BUILD_CONFIG }}" -v minimal -p:Version="${{ env.VERSION_NUMBER }}" -p:PackageProjectUrl="${{ env.REPO_URL }}"
      - name: Run dotnet test
        run: dotnet test --nologo --no-build -c "${{ env.BUILD_CONFIG }}" -v minimal --logger trx -r "${{ github.workspace }}/artifacts/test-results"
      - name: Archive test results
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-test-results-${{ env.VERSION_NUMBER }}
          path: ${{ github.workspace }}/artifacts/test-results/*.trx
      #endregion

      #region Handle NuGet library packages
      - name: Run dotnet pack
        if: ${{ inputs.CONTAINS_LIBRARIES }}
        run: dotnet pack --nologo --no-build -c "${{ env.BUILD_CONFIG }}" -v minimal -p:VERSION="${{ env.VERSION_NUMBER }}" -o "${{ github.workspace }}/artifacts/packages" -p:PackageProjectUrl="${{ env.REPO_URL }}"
      - name: Archive library packages
        if: ${{ inputs.CONTAINS_LIBRARIES }}
        uses: actions/upload-artifact@v2
        with:
          name: library-nuget-packages-${{ env.VERSION_NUMBER }}
          path: ${{ github.workspace }}/artifacts/packages
      - name: Publish packages
        if: ${{ inputs.IS_DEPLOYABLE }}
        run: echo "Pretend I published the packages"
      #endregion


